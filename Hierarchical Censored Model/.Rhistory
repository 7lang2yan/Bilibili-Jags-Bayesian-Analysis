knitr::opts_chunk$set(echo = TRUE)
library(rjags)
library(runjags)
library(HDInterval)
library(knitr)
library(GGally)
library(ggplot2)
data <- read.csv("data/wtp_data.csv",stringsAsFactors = TRUE)
# prepare data.frame for plot
df_plot <- data.frame(
bid=c(data$Bid[which(data$Group=="A")],data$Bid[which(data$Group=="B")]),
group=rep(c("Group A", "Group B"), each=length(data$Bid[which(data$Group=="A")]) )
)
ggplot(df_plot, aes(x=bid, color=group, fill=group)) + geom_density(alpha=0.3)
# bid data
y <- data$Bid
Ntotal <- length(y)
# hierarchical group
groupIdx <- as.numeric(data$Group)
Ngroup <- 2
subIdx <- data$Subject
Nsubj <- length(unique(subIdx))
dat_std_normal <- dump.format(
list(
y = y,
Ntotal = Ntotal,
groupIdx = groupIdx,
Ngroup = Ngroup,
subIdx = subIdx,
Nsubj = Nsubj
)
)
# threshold (0.,5.)
threshMat <- matrix(rep(c(0.,5.), length(y)),
byrow=TRUE, nrow=length(y)) # censored limits
ybin = rep(1,length(y)) # censored data, all the observables are within the limit
ybin[which(y==0)] <- 0 # change ybin to 0 with observed data lies exactly on the lower bound
ybin[which(y==5)] <- 2 # change ybin to 2 with observed data lies exactly on the upper bound
y_cen <- y
y_cen[which(y==0 | y==5)] <- NA # comprise data points, which are likely to be outside of limits, to NA. let Jags impute them
dat_cen_normal <- dump.format(
list(
y = y_cen,
ybin = ybin,
threshMat = threshMat,
Ntotal = Ntotal,
groupIdx = groupIdx,
Ngroup = Ngroup,
subIdx = subIdx,
Nsubj = Nsubj
)
)
View(data)
data <- read.csv("data/wtp_data.csv",stringsAsFactors = TRUE)
# prepare data.frame for plot
df_plot <- data.frame(
bid=c(data$Bid[which(data$Group=="A")],data$Bid[which(data$Group=="B")]),
group=rep(c("Group A", "Group B"), each=length(data$Bid[which(data$Group=="A")]) )
)
ggplot(df_plot, aes(x=bid, color=group, fill=group)) + geom_density(alpha=0.3)
# bid data
y <- data$Bid
Ntotal <- length(y)
# hierarchical group
groupIdx <- as.numeric(data$Group)
Ngroup <- 2
subIdx <- data$Subject
Nsubj <- length(unique(subIdx))
dat_std_normal <- dump.format(
list(
y = y,
Ntotal = Ntotal,
groupIdx = groupIdx,
Ngroup = Ngroup,
subIdx = subIdx,
Nsubj = Nsubj
)
)
# threshold (0.,5.)
threshMat <- matrix(rep(c(0.,5.), length(y)),
byrow=TRUE, nrow=length(y)) # censored limits
ybin = rep(1,length(y)) # censored data, all the observables are within the limit
ybin[which(y==0)] <- 0 # change ybin to 0 with observed data lies exactly on the lower bound
ybin[which(y==5)] <- 2 # change ybin to 2 with observed data lies exactly on the upper bound
y_cen <- y
y_cen[which(y==0 | y==5)] <- NA # comprise data points, which are likely to be outside of limits, to NA. let Jags impute them
dat_cen_normal <- dump.format(
list(
y = y_cen,
ybin = ybin,
threshMat = threshMat,
Ntotal = Ntotal,
groupIdx = groupIdx,
Ngroup = Ngroup,
subIdx = subIdx,
Nsubj = Nsubj
)
)
View(threshMat)
data <- read.csv("data/wtp_data.csv",stringsAsFactors = TRUE)
# prepare data.frame for plot
df_plot <- data.frame(
bid=c(data$Bid[which(data$Group=="A")],data$Bid[which(data$Group=="B")]),
group=rep(c("Group A", "Group B"), each=length(data$Bid[which(data$Group=="A")]) )
)
ggplot(df_plot, aes(x=bid, color=group, fill=group)) + geom_density(alpha=0.3)
View(data)
data <- read.csv("data/wtp_data.csv",stringsAsFactors = TRUE)
# prepare data.frame for plot
df_plot <- data.frame(
bid=c(data$Bid[which(data$Group=="A")],data$Bid[which(data$Group=="B")]),
group=rep(c("Group A", "Group B"), each=length(data$Bid[which(data$Group=="A")]) )
)
ggplot(df_plot, aes(x=bid, color=group, fill=group)) + geom_density(alpha=0.3)
View(data)
# bid data
y <- data$Bid
Ntotal <- length(y)
# hierarchical group
groupIdx <- as.numeric(data$Group)
Ngroup <- 2
subIdx <- data$Subject
Nsubj <- length(unique(subIdx))
dat_std_normal <- dump.format(
list(
y = y,
Ntotal = Ntotal,
groupIdx = groupIdx,
Ngroup = Ngroup,
subIdx = subIdx,
Nsubj = Nsubj
)
)
# threshold (0.,5.)
threshMat <- matrix(rep(c(0.,5.), length(y)),
byrow=TRUE, nrow=length(y)) # censored limits
ybin = rep(1,length(y)) # censored data, all the observables are within the limit
ybin[which(y==0)] <- 0 # change ybin to 0 with observed data lies exactly on the lower bound
ybin[which(y==5)] <- 2 # change ybin to 2 with observed data lies exactly on the upper bound
y_cen <- y
y_cen[which(y==0 | y==5)] <- NA # comprise data points, which are likely to be outside of limits, to NA. let Jags impute them
dat_cen_normal <- dump.format(
list(
y = y_cen,
ybin = ybin,
threshMat = threshMat,
Ntotal = Ntotal,
groupIdx = groupIdx,
Ngroup = Ngroup,
subIdx = subIdx,
Nsubj = Nsubj
)
)
View(threshMat)
