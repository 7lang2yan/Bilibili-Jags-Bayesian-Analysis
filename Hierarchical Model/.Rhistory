# Load the required libraries
library(runjags)
source("../util/HDIofMCMC.r") # Load the HDI function
# Load the data
myData = read.csv( file="data/HierLinRegressData.csv" )
View(myData)
x = myData$X
y = myData$Y
subIdx = myData$Subj
Ntotal = length(x)
Nsubj = length(unique(subIdx))
a = c(10,20,30)
scale(a)
(a - mean(a)) / sd(a)
x = as.vector(scale(x))
y = as.vector(scale(y))
# prepare the data for JAGS
dat <- dump.format(list(y=y, x=x, subIdx=subIdx, Ntotal=Ntotal, Nsubj=Nsubj))
# Initialize chains
inits1 <- dump.format(list(beta0.mu=1, beta1.mu=0, .RNG.name="base::Super-Duper", .RNG.seed=99999 ))
inits2 <- dump.format(list(beta0.mu=3, beta1.mu=1, .RNG.name="base::Wichmann-Hill", .RNG.seed=1234 ))
inits3 <- dump.format(list(beta0.mu=2, beta1.mu=2, .RNG.name="base::Mersenne-Twister", .RNG.seed=6666 ))
# Tell JAGS which latent variables to monitor
monitor = c("beta0.mu", "beta1.mu", "nu", "deviance")
# Run the function that fits the models using JAGS
results <- run.jags(model="model/linearHierarchicalRegrRobust.txt",
monitor=monitor,
data=dat,
n.chains=3,
inits=c(inits1, inits2, inits3),
plots = FALSE,
burnin=5000,
sample=3000,
thin=5)
# read the summary of the results
results
# plot the chains
plot(results$mcmc)
# readout the 3 chains from the "results" structure and combine them into a single matrix
# each of the resulting matrix represent a single MCMC sample, the columns represent the monitored variables
chains = rbind(results$mcmc[[1]], results$mcmc[[2]], results$mcmc[[3]])
beta1.est = chains[,"beta1.mu"]
# Do not close this plot window, because we sill update this plot (see code below)
plot(density(beta1.est), xlim=c(-0.5, 1.5), lwd=3)
# Return the HDI of the MCMC of interest
hdi = HDIofMCMC(beta1.est , credMass=0.95)
# Plot the median of the MCMC of interest
abline(v=median(beta1.est), col="red", lwd=2)
median(beta1.est)
# add HDI limits of the MCMC of interest
abline(v=hdi[1], lty=2, col="red", lwd=2)
abline(v=hdi[2], lty=2, col="red", lwd=2)
hdi
# compare the HDI limits to 0
# Can we conclude that this distribution is different from 0?
abline(v=0, col="grey", lwd=2)
